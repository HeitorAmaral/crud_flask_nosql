version: '3.8'
services:
  app-flask:
    build: .
    restart: unless-stopped
    command: flask run --host 0.0.0.0
    depends_on:
      - unittest
      - db-mongo
    ports:
      - 5000:5000
    env_file:
      - .env.prod
    volumes:
      - appdata:/app
    networks:
      - frontend
      - backend

  db-mongo:
    image: mongo
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_DATABASE: todo
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: MngDb321
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodbdata:/data/db
    networks:
      - backend

  unittest:
    build: .
    command: python -m unittest tests.py

  es:
    image: elasticsearch:5.4
    volumes:
      - esdata:/usr/share/elasticsearch/data/
    ports:
      - "9200:9200"

  kibana:
    image: kibana:5.4.3
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://es:9200
    depends_on:
      - es

  logstash:
    image: logstash:5.4.3
    depends_on:
      - es
    volumes:
      - appdata:/app
    command: logstash -f /app/logstash.conf

networks:
  frontend:
  backend:

volumes:
  mongodbdata:
  appdata:
  esdata: